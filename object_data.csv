Property,Value
Attitude,<POINTER(IAgVeAttitude) ptr=0x23b8f8ba7c8 at 23b91607250>
AttitudeSupportedTypes,"((1, 'Real Time'), (2, 'Standard'))"
AttitudeType,2
CentralBodyName,Earth
ClassName,Satellite
ClassType,18
EclipseBodies,<POINTER(IAgVeEclipseBodies) ptr=0x23b8f8bbd48 at 23b91607250>
ExportTools,<POINTER(IAgSaExportTools) ptr=0x23b8f8b99c8 at 23b916072d0>
Graphics,<POINTER(IAgSaGraphics) ptr=0x23b8f8ba048 at 23b91607250>
HasBeenDeleted,False
HasChildren,False
InstanceName,RPO
LightingMaxStep,30.0
LongDescription,
MassProperties,<POINTER(IAgVeMassProperties) ptr=0x23b8f780608 at 23b91607250>
ObjectCoverage,<POINTER(IAgStkObjectCoverage) ptr=0x23b8f781688 at 23b916072d0>
ObjectFiles,"('C:\\Users\\graye\\OneDrive\\Documents\\STK 12\\Scenario2\\RPO.sa', 'C:\\Users\\graye\\OneDrive\\Documents\\STK 12\\Scenario2\\RPO.sa3', 'C:\\Program Files\\AGI\\STK 12\\STKData\\VO\\Models\\Space\\satellite.glb', 'C:\\Program Files\\AGI\\STK 12\\STKData\\VO\\Textures\\milkyway.jpg')"
Parent,<POINTER(IAgStkObject) ptr=0x23b8f8b95c8 at 23b916072d0>
PassBreak,<POINTER(IAgVePassBreak) ptr=0x23b8f782508 at 23b91607250>
Path,/Application/STK/Scenario/Orbit/Satellite/RPO
Propagator,<POINTER(IAgVePropagator) ptr=0x23b8f780f08 at 23b91607250>
PropagatorSupportedTypes,"((16, '11Parameter'), (12, 'Astrogator'), (14, 'GPS'), (0, 'HPOP'), (1, 'J2Perturbation'), (2, 'J4Perturbation'), (3, 'LOP'), (13, 'RealTime'), (4, 'SGP4'), (17, 'SP3'), (5, 'SPICE'), (6, 'StkExternal'), (7, 'TwoBody'), (8, 'UserExternal'))"
PropagatorType,12
RadarClutterMap,<POINTER(IAgRadarClutterMapInheritable) ptr=0x23b8f782b08 at 23b91607250>
RadarCrossSection,<POINTER(IAgRadarCrossSectionInheritable) ptr=0x23b8f781488 at 23b91607350>
ReferenceVehicle,<POINTER(IAgLinkToObject) ptr=0x23b8f781808 at 23b916075d0>
Root,<POINTER(IAgStkObjectRoot) ptr=0x23b8e88c728 at 23b91607350>
ShortDescription,
SpaceEnvironment,<POINTER(IAgVeSpEnvSpaceEnvironment) ptr=0x23b8f782a88 at 23b91607350>
UseTerrainInLightingComputations,False
VO,<POINTER(IAgSaVO) ptr=0x23b8f781388 at 23b91607350>
Vgt,<POINTER(IAgCrdnProvider) ptr=0x23b8f782608 at 23b91607650>
_b_base_,
_b_needsfree_,1
_case_insensitive_,True
_idlflags_,"['hidden', 'dual', 'nonextensible', 'oleautomation']"
_iid_,{184327EA-EFF6-451B-B99E-794A21E4271F}
_methods_,"[_ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_PropagatorType', argtypes=(<class 'ctypes.wintypes.LP_c_long'>,), paramflags=((10, 'pVal'),), idlflags=(201, ""The type of propagator used to define the satellite's orbit."", 'propget'), doc=""The type of propagator used to define the satellite's orbit.""), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='SetPropagatorType', argtypes=(<class 'ctypes.c_long'>,), paramflags=((1, 'EPropagator'),), idlflags=(202, 'Sets the propagator type.'), doc='Sets the propagator type.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_Propagator', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgVePropagator)'>,), paramflags=((10, 'ppVal'),), idlflags=(203, 'Get information for the propagator.', 'propget'), doc='Get information for the propagator.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_AttitudeType', argtypes=(<class 'ctypes.wintypes.LP_c_long'>,), paramflags=((10, 'pVal'),), idlflags=(204, ""The type of the satellite's attitude."", 'propget'), doc=""The type of the satellite's attitude.""), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='SetAttitudeType', argtypes=(<class 'ctypes.c_long'>,), paramflags=((1, 'Attitude'),), idlflags=(205, 'Sets the attitude type.'), doc='Sets the attitude type.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='IsAttitudeTypeSupported', argtypes=(<class 'ctypes.c_long'>, <class 'comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.LP_VARIANT_BOOL'>), paramflags=((1, 'Attitude'), (10, 'pRetVal')), idlflags=(206, 'Get a value indicating whether the specified type can be used.'), doc='Get a value indicating whether the specified type can be used.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_AttitudeSupportedTypes', argtypes=(<class 'comtypes.safearray.LP_LP_SAFEARRAY_tagVARIANT'>,), paramflags=((10, 'ppRetVal'),), idlflags=(207, 'Return an array of valid choices.', 'propget'), doc='Return an array of valid choices.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_Attitude', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgVeAttitude)'>,), paramflags=((10, 'ppVal'),), idlflags=(208, 'Get the Attitude properties of the satellite.', 'propget'), doc='Get the Attitude properties of the satellite.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_MassProperties', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgVeMassProperties)'>,), paramflags=((10, 'ppVal'),), idlflags=(209, 'Get the Mass properties of the satellite.', 'propget'), doc='Get the Mass properties of the satellite.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_PassBreak', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgVePassBreak)'>,), paramflags=((10, 'ppVal'),), idlflags=(210, 'Get the Pass Break properties of the satellite.', 'propget'), doc='Get the Pass Break properties of the satellite.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_GroundEllipses', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgVeGroundEllipsesCollection)'>,), paramflags=((10, 'ppVal'),), idlflags=(211, 'Get the Ground Ellipses properties of the satellite.', 'propget'), doc='Get the Ground Ellipses properties of the satellite.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_Graphics', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgSaGraphics)'>,), paramflags=((10, 'ppVal'),), idlflags=(212, 'Get the 2D Graphics properties of the satellite.', 'propget'), doc='Get the 2D Graphics properties of the satellite.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_VO', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgSaVO)'>,), paramflags=((10, 'ppVal'),), idlflags=(213, 'Get the 3D Graphics properties of the satellite.', 'propget'), doc='Get the 3D Graphics properties of the satellite.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_AccessConstraints', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgAccessConstraintCollection)'>,), paramflags=((10, 'ppRetVal'),), idlflags=(214, 'Get the constraints imposed on the satellite.', 'propget'), doc='Get the constraints imposed on the satellite.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_Parent', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgStkObject)'>,), paramflags=((10, 'ppVal'),), idlflags=(401, 'Returns the parent object or null if the object has become orphaned. The exception is AgStkObjectRoot object which is a topmost element and does not have a parent.', 'propget'), doc='Returns the parent object or null if the object has become orphaned. The exception is AgStkObjectRoot object which is a topmost element and does not have a parent.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_Path', argtypes=(<class 'comtypes.automation.LP_BSTR'>,), paramflags=((10, 'pVal'),), idlflags=(402, 'Returns the object path.', 'propget'), doc='Returns the object path.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_InstanceName', argtypes=(<class 'comtypes.automation.LP_BSTR'>,), paramflags=((10, 'pVal'),), idlflags=(403, 'A name of the object.', 'propget'), doc='A name of the object.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_set_InstanceName', argtypes=(<class 'comtypes._post_coinit.bstr.BSTR'>,), paramflags=((1, 'pVal'),), idlflags=(403, 'A name of the object.', 'propput'), doc='A name of the object.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_ClassType', argtypes=(<class 'ctypes.wintypes.LP_c_long'>,), paramflags=((10, 'pVal'),), idlflags=(404, 'Returns a class type of the object (i.e. eAircraft, eFacility etc.)', 'propget'), doc='Returns a class type of the object (i.e. eAircraft, eFacility etc.)'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_ClassName', argtypes=(<class 'comtypes.automation.LP_BSTR'>,), paramflags=((10, 'pName'),), idlflags=(405, 'Returns a class name of the object (i.e. Aircraft, Facility.)', 'propget'), doc='Returns a class name of the object (i.e. Aircraft, Facility.)'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_Children', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgStkObjectCollection)'>,), paramflags=((10, 'ppVal'),), idlflags=(406, 'Returns a collection of direct descendants of the current object.', 'propget'), doc='Returns a collection of direct descendants of the current object.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='Export', argtypes=(<class 'comtypes._post_coinit.bstr.BSTR'>,), paramflags=((1, 'Filename'),), idlflags=(407, 'Exports the object to a file.'), doc='Exports the object to a file.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_Root', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgStkObjectRoot)'>,), paramflags=((10, 'ppRetVal'),), idlflags=(408, 'Returns the Root object or null.', 'propget'), doc='Returns the Root object or null.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_DataProviders', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgDataProviderCollection)'>,), paramflags=((10, 'ppRetVal'),), idlflags=(409, 'Returns the object representing a list of available data providers for the object.', 'propget'), doc='Returns the object representing a list of available data providers for the object.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_ShortDescription', argtypes=(<class 'comtypes.automation.LP_BSTR'>,), paramflags=((10, 'pShortDesc'),), idlflags=(410, 'The short description of the object.', 'propget'), doc='The short description of the object.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_set_ShortDescription', argtypes=(<class 'comtypes._post_coinit.bstr.BSTR'>,), paramflags=((1, 'pShortDesc'),), idlflags=(410, 'The short description of the object.', 'propput'), doc='The short description of the object.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_LongDescription', argtypes=(<class 'comtypes.automation.LP_BSTR'>,), paramflags=((10, 'pLongDesc'),), idlflags=(411, 'A long description of the object.', 'propget'), doc='A long description of the object.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_set_LongDescription', argtypes=(<class 'comtypes._post_coinit.bstr.BSTR'>,), paramflags=((1, 'pLongDesc'),), idlflags=(411, 'A long description of the object.', 'propput'), doc='A long description of the object.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_HasChildren', argtypes=(<class 'comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.LP_VARIANT_BOOL'>,), paramflags=((10, 'pHasChildren'),), idlflags=(412, 'Returns true if the object has direct descendants.', 'propget'), doc='Returns true if the object has direct descendants.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='IsObjectCoverageSupported', argtypes=(<class 'comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.LP_VARIANT_BOOL'>,), paramflags=((10, 'pRetVal'),), idlflags=(413, 'Used to determine whether or not the object supports ObjectCoverage.'), doc='Used to determine whether or not the object supports ObjectCoverage.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_ObjectCoverage', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgStkObjectCoverage)'>,), paramflags=((10, 'ppRetVal'),), idlflags=(414, 'Returns an IAgStkObjectCoverage object.', 'propget'), doc='Returns an IAgStkObjectCoverage object.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='IsAccessSupported', argtypes=(<class 'comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.LP_VARIANT_BOOL'>,), paramflags=((10, 'pRetVal'),), idlflags=(415, 'Used to determine whether or not the object supports Access.'), doc='Used to determine whether or not the object supports Access.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='GetAccess', argtypes=(<class 'comtypes._post_coinit.bstr.BSTR'>, <class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgStkAccess)'>), paramflags=((1, 'ObjectPath'), (10, 'ppIAgStkAccess')), idlflags=(416, 'Returns an IAgStkAccess object.'), doc='Returns an IAgStkAccess object.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='GetAccessToObject', argtypes=(<class 'comtypes._post_coinit.unknwn.POINTER(IAgStkObject)'>, <class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgStkAccess)'>), paramflags=((1, 'pObject'), (10, 'ppIAgStkAccess')), idlflags=(417, 'Returns an IAgStkAccess object.'), doc='Returns an IAgStkAccess object.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_HasBeenDeleted', argtypes=(<class 'comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.LP_VARIANT_BOOL'>,), paramflags=((10, 'pRetVal'),), idlflags=(601, 'Determine if the object has been deleted or has become invalid due to some other modifications to its internal state.', 'propget'), doc='Determine if the object has been deleted or has become invalid due to some other modifications to its internal state.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_EclipseBodies', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgVeEclipseBodies)'>,), paramflags=((10, 'ppRetVal'),), idlflags=(215, 'Get the customized list of Eclipse Bodies, which are central bodies used in lighting computations.', 'propget'), doc='Get the customized list of Eclipse Bodies, which are central bodies used in lighting computations.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='IsPropagatorTypeSupported', argtypes=(<class 'ctypes.c_long'>, <class 'comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.LP_VARIANT_BOOL'>), paramflags=((1, 'Propagator'), (10, 'pRetVal')), idlflags=(216, 'Gets a value indicating whether the specified type can be used.'), doc='Gets a value indicating whether the specified type can be used.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_PropagatorSupportedTypes', argtypes=(<class 'comtypes.safearray.LP_LP_SAFEARRAY_tagVARIANT'>,), paramflags=((10, 'ppRetVal'),), idlflags=(217, 'Returns an array of valid choices.', 'propget'), doc='Returns an array of valid choices.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_ExportTools', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgSaExportTools)'>,), paramflags=((10, 'ppRetVal'),), idlflags=(218, 'Returns the IAgSaExportTools interface.', 'propget'), doc='Returns the IAgSaExportTools interface.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='GetSpatialInfo', argtypes=(<class 'ctypes.wintypes.VARIANT_BOOL'>, <class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgVeSpatialInfo)'>), paramflags=((1, 'Recycle'), (10, 'ppRetVal')), idlflags=(801, 'Returns the spatial information for an object.'), doc='Returns the spatial information for an object.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='CreateOnePointAccess', argtypes=(<class 'comtypes._post_coinit.bstr.BSTR'>, <class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgOnePtAccess)'>), paramflags=((1, 'PathToObject'), (10, 'ppRetVal')), idlflags=(418, 'Creates one point access to the supplied object name. The Remove method in IAgOnePtAccess should be called when you are done with the data.'), doc='Creates one point access to the supplied object name. The Remove method in IAgOnePtAccess should be called when you are done with the data.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_ObjectFiles', argtypes=(<class 'comtypes.safearray.LP_LP_SAFEARRAY_tagVARIANT'>,), paramflags=((10, 'ppRetVal'),), idlflags=(419, 'Returns the list of files that constitute an object.', 'propget'), doc='Returns the list of files that constitute an object.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='Unload', argtypes=(), paramflags=(), idlflags=(420, 'Removes the object from the scenario.'), doc='Removes the object from the scenario.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_SpaceEnvironment', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgVeSpEnvSpaceEnvironment)'>,), paramflags=((10, 'ppRetVal'),), idlflags=(219, 'Get the SpaceEnvironment properties of the satellite.', 'propget'), doc='Get the SpaceEnvironment properties of the satellite.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='IsVgtSupported', argtypes=(<class 'comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.LP_VARIANT_BOOL'>,), paramflags=((10, 'pRetVal'),), idlflags=(421, 'Returns whether the object supports Vector Geometry.'), doc='Returns whether the object supports Vector Geometry.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_Vgt', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgCrdnProvider)'>,), paramflags=((10, 'ppRetVal'),), idlflags=(422, 'Returns an instance of Vector Geometry Tool provider.', 'propget'), doc='Returns an instance of Vector Geometry Tool provider.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='CopyObject', argtypes=(<class 'comtypes._post_coinit.bstr.BSTR'>, <class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgStkObject)'>), paramflags=((1, 'NewObjectName'), (10, 'ppRetVal')), idlflags=(423, 'Copy and paste the current instance of STK Object. The copied object will be pasted as the sibling of the instance being copied.'), doc='Copy and paste the current instance of STK Object. The copied object will be pasted as the sibling of the instance being copied.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_ReferenceVehicle', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgLinkToObject)'>,), paramflags=((10, 'ppRetVal'),), idlflags=(220, 'Get the reference vehicle of the satellite.', 'propget'), doc='Get the reference vehicle of the satellite.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_RadarClutterMap', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgRadarClutterMapInheritable)'>,), paramflags=((10, 'ppRadarClutterMap'),), idlflags=(221, 'Returns the radar clutter map.', 'propget'), doc='Returns the radar clutter map.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_RadarCrossSection', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgRadarCrossSectionInheritable)'>,), paramflags=((10, 'ppRCS'),), idlflags=(222, 'Returns the radar cross sectoin.', 'propget'), doc='Returns the radar cross sectoin.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_CentralBodyName', argtypes=(<class 'comtypes.automation.LP_BSTR'>,), paramflags=((10, 'pRetVal'),), idlflags=(424, ""The object's central body."", 'propget'), doc=""The object's central body.""), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_Metadata', argtypes=(<class 'comtypes._post_coinit.unknwn.LP_POINTER(IAgKeyValueCollection)'>,), paramflags=((10, 'ppRetVal'),), idlflags=(425, ""Gets the object's metadata. Metadata is a collection of keys and their associated values."", 'propget'), doc=""Gets the object's metadata. Metadata is a collection of keys and their associated values.""), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_UseTerrainInLightingComputations', argtypes=(<class 'comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.LP_VARIANT_BOOL'>,), paramflags=((10, 'pVal'),), idlflags=(426, 'Opt whether to compute lighting using terrain data.', 'propget'), doc='Opt whether to compute lighting using terrain data.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_set_UseTerrainInLightingComputations', argtypes=(<class 'ctypes.wintypes.VARIANT_BOOL'>,), paramflags=((1, 'pVal'),), idlflags=(426, 'Opt whether to compute lighting using terrain data.', 'propput'), doc='Opt whether to compute lighting using terrain data.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_get_LightingMaxStep', argtypes=(<class 'comtypes.gen._04C3E93C_A86F_4EB6_ADC5_FB4C61CB1489_0_1_0.LP_c_double'>,), paramflags=((10, 'pMaxStep'),), idlflags=(427, 'The maximum step size to use when computing lighting. Only applies (and only can be set) when UseTerrainInLightingComputations is true. Uses Time Dimension.', 'propget'), doc='The maximum step size to use when computing lighting. Only applies (and only can be set) when UseTerrainInLightingComputations is true. Uses Time Dimension.'), _ComMemberSpec(restype=<class 'ctypes.HRESULT'>, name='_set_LightingMaxStep', argtypes=(<class 'ctypes.c_double'>,), paramflags=((1, 'pMaxStep'),), idlflags=(427, 'The maximum step size to use when computing lighting. Only applies (and only can be set) when UseTerrainInLightingComputations is true. Uses Time Dimension.', 'propput'), doc='The maximum step size to use when computing lighting. Only applies (and only can be set) when UseTerrainInLightingComputations is true. Uses Time Dimension.')]"
_needs_com_addref_,
_objects,
_type_,P
value,<POINTER(_IAgSatellite) ptr=0x23b8e59e708 at 23b91606f50>
